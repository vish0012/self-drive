def calculate_iou(gt_bbox, pred_bbox):
    """
    calculate iou 
    args:
    - gt_bbox [array]: 1x4 single gt bbox
    - pred_bbox [array]: 1x4 single pred bbox
    returns:
    - iou [float]: iou between 2 bboxes
    """
    ## IMPLEMENT THIS FUNCTION
    
    #assertion for co-ordinate of box
    assert gt_bbox[0] < gt_bbox[2]
    assert gt_bbox[1] < gt_bbox[3]
    assert pred_bbox[0] < pred_bbox[2]
    assert pred_bbox[1] < pred_bbox[3]

    #finding co-ordinate of box
    x1=max(gt_bbox[0],pred_bbox[0])
    y1=max(gt_bbox[1],pred_bbox[1])
    x2=min(gt_bbox[2],pred_bbox[2])
    y2=min(gt_bbox[3],pred_bbox[3])
    
    if x2<x1 or y2<y1:
        return 0.0
    
    # finding area of intersection
    inter_area=max(0,x2-x1)*max(0,y2-y1)
    
    # finding both box area i.e gt_bbox and pred_bbox
    gt_bbox=(gt_bbox[2]-gt_bbox[0])*(gt_bbox[3]-gt_bbox[1])
    pred_bbox=(pred_bbox[2]-pred_bbox[0])*(pred_bbox[3]-pred_bbox[1])
    
    # finding IOU
    iou=inter_area/float(gt_bbox+pred_bbox-inter_area)
    assert iou >=0.0
    assert iou <=1.0
    print(iou)
    
    return iou


